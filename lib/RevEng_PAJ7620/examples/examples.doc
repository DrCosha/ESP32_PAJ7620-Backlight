/**
@example paj7620_9_gestures.ino
@brief Polls for all 9 known gestures
@see Gesture
@author Aaron S. Crandall <crandall@gonzaga.edu>
@version 1.0.0
@copyright Copyright (c) 2020 Aaron S. Crandall
@copyright Same as package under MIT License (MIT)
@since December 2020

@details This demo can recognize 9 gestures and output the result,
including move up, move down, move left, move right, move forward,
move backward, circle-clockwise, circle-counter clockwise, and wave.
*/

/**
@example paj7620_interrupt.ino
@brief Sets up an interrupt routine to wait for any gestures
@see Gesture
@author Marc Finns https://github.com/MarcFinns
@version 1.0.0
@copyright Copyright (c) 2017 Marc Finns
@copyright Same as package under MIT License (MIT)
@since December 2020

@details This demo can recognize 9 gestures and output the result,
including move up, move down, move left, move right, move forward,
move backward, circle-clockwise, circle-counter clockwise, and wave.
This example uses an interrupt handler to dectect when a gesture has
occurred instead of polling for it.
@par
Arduino [attachInterrupt](https://www.arduino.cc/reference/en/language/functions/external-interrupts/attachinterrupt/) documentation

@note Special wiring: Sensor interrupt (INT) pin to microcontroller (Arduino) pin 2
*/

/**
@example paj7620_up_down.ino
@brief Polls for only the up and down gestures and sets the builtin LED on and off
@author Aaron S. Crandall <crandall@gonzaga.edu>
@version 1.0.0
@copyright Copyright (c) 2020 Aaron S. Crandall
@copyright Same as package under MIT License (MIT)
@since December 2020

@details This demo only uses the up and down gestures to control the builtin LED.
Moving your hand in front of the sensor up will turn the LED on.
Moving your hand in front of the sensor down will turn the LED off.
*/

/**
@example paj7620_wave_count.ino
@brief Polls for the number of waves the sensor sees
@author Aaron S. Crandall <crandall@gonzaga.edu>
@version 1.0.0
@copyright Copyright (c) 2020 Aaron S. Crandall
@copyright Same as package under MIT License (MIT)
@since December 2020

@details This demo uses the @ref RevEng_PAJ7620::getWaveCount() "getWaveCount()" interface.
As you wave your hand in front of the sensor, it counts the quantity of passes you make,
 and the RevEng library exposes that value. This demo outputs that value and the wave event.
*/

/**
@example paj7620_cursor_mode.ino
@brief Sets sensor into "cursor" mode to track an object in a (x,y) coordinate system.
@author Aaron S. Crandall <crandall@gonzaga.edu>
@version 1.0.0
@copyright Copyright (c) 2020 Aaron S. Crandall
@copyright Same as package under MIT License (MIT)
@since December 2020

@details This example shows off "cursor mode" of the sensor
    This mode outputs an (X,Y) pair when an object is in view.
    It is effectively a "mouse mode" or "pointer mode"
    The intended use would be a low res non-contact pointer for input
    It would make a really cool game interface!
    This demo also enables the LED_BUILTIN - 
     when a cursor is in view the LED lights up.

*/

